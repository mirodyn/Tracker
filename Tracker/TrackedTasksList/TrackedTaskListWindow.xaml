<Window x:Class="Tracker.TrackedTasksList.TrackedTaskListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tracker.TrackedTasksList"
        xmlns:tracker="clr-namespace:Tracker"
        mc:Ignorable="d"
        Title="TrackedTaskListWindow" Height="800" Width="1200" Style="{DynamicResource SVCWindow}">
    <Window.Resources>
        <ResourceDictionary>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border CornerRadius="5" Background="Transparent">

                        </Border>
                        <!--<Rectangle Margin="5" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"></BooleanToVisibilityConverter>
            <local:QiCodeToVisibilityConverter x:Key="QiCodeToVisibility"></local:QiCodeToVisibilityConverter>
            <local:InvertedBooleanToVisibilityConverter x:Key="InvertedBoolToVisibility"></local:InvertedBooleanToVisibilityConverter>
            <local:ObjectToTypeStringConverter x:Key="ObjectToString"></local:ObjectToTypeStringConverter>
            <local:IsTodaySelectedConverter x:Key="IsTodaySelected"></local:IsTodaySelectedConverter>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Opacity="0.5"  Color="{DynamicResource ActivityHighlight}"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="{DynamicResource ActivityHighlight}"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background"  Color="{DynamicResource ActivityHighlight}"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border"  Color="{DynamicResource ActivityHighlight}"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="{DynamicResource ActivityHighlight}"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border"  Color="{DynamicResource ActivityHighlight}"/>
        <Style x:Key="CustomContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BaseBrush}"/>
            <Setter Property="BorderThickness" Value="2,1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        </ResourceDictionary>

    </Window.Resources>
    <Grid Background="{DynamicResource BaseBrush}" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" ></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Background="{DynamicResource HighContrastDownBrush}" Margin="10,10,10,5" Height="25" CornerRadius="10" >
            <Button Width="100" Margin="10,2" Content="Sync all" HorizontalAlignment="Left" Click="Button_Click_1" >
            </Button>
        </Border>
        <Border Grid.Row="1" CornerRadius="10" Background="{DynamicResource ContrastDownBrush}" Margin="10,0,10,10" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" MinWidth="200"></ColumnDefinition>
                    <ColumnDefinition Width="1*" MinWidth="200"></ColumnDefinition>
                    <ColumnDefinition Width="3"></ColumnDefinition>
                    <ColumnDefinition Width="auto" MinWidth="200"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Margin="5,5,0,5" Background="{DynamicResource BaseBrush}" CornerRadius="10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Button Click="Button_Click" FontWeight="DemiBold" Foreground="{DynamicResource FullContrastUpBrush}" Background="{DynamicResource HighContrastDownBrush}" BorderThickness="0" Content="Today" Margin="10" >
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Setters>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border CornerRadius="5"  Background="{TemplateBinding Property=Background}">
                                                        <TextBlock Text="Today" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border CornerRadius="5"  Background="{DynamicResource DimmedActivityHighlightBrush}">
                                                            <TextBlock Text="Today" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding Path=SelectedDay.Day, Converter={StaticResource IsTodaySelected}}" Value="true">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border CornerRadius="5"  Background="{DynamicResource ActivityHighlightBrush}">
                                                            <TextBlock Text="Today" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="1" FontWeight="DemiBold"  FontSize="16" Foreground="{DynamicResource HighContrastUpBrush }" Margin="3" Text="Unsynchronized days:"></TextBlock>
                            <ListView ItemContainerStyle="{DynamicResource CustomContainerStyle}" x:Name="UnsyncedList" SelectionChanged="UnsyncedList_SelectionChanged" SelectedItem="{Binding SelectedDay}" BorderThickness="0" Margin="5" HorizontalContentAlignment="Stretch" Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding UnsynchronizedDays}" Background="Transparent">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="Transparent" CornerRadius="5">
                                            <TextBlock HorizontalAlignment="Center"  Foreground="{DynamicResource FullContrastUpBrush}" Text="{Binding Day}"></TextBlock>
                                            
                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" FontWeight="DemiBold" FontSize="16" Foreground="{DynamicResource HighContrastUpBrush }" Margin="3" Text="Archived days:"></TextBlock>
                            <ListView ItemContainerStyle="{DynamicResource CustomContainerStyle}" x:Name="ArchivedList" SelectionChanged="ArchivedList_SelectionChanged" SelectedItem="{Binding SelectedDay}" BorderThickness="0" Margin="5" HorizontalContentAlignment="Stretch" Grid.Row="2" VerticalAlignment="Stretch" ItemsSource="{Binding ArchivedDays}" Background="Transparent" >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="{DynamicResource HighContrastDownBrush}" CornerRadius="5">
                                            <TextBlock HorizontalAlignment="Center"  Foreground="{DynamicResource FullContrastUpBrush}" Text="{Binding Day}"></TextBlock>

                                        </Border>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>

                    </Grid>

                </Border>
                <Border Grid.Column="1" Margin="5,5,0,5" Background="{DynamicResource BaseBrush}" CornerRadius="10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="{DynamicResource HighContrastDownBrush}" Margin="10,10,10,2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"></ColumnDefinition>
                                    <ColumnDefinition Width="120"></ColumnDefinition>
                                    <ColumnDefinition Width="500"></ColumnDefinition>
                                    <ColumnDefinition Width="150"></ColumnDefinition>
                                    <ColumnDefinition Width="150"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="QI" VerticalAlignment="Center" Margin="8,3" FontWeight="Bold" Grid.Column="0" Foreground="{DynamicResource HighContrastUpBrush  }"></TextBlock>
                                <TextBlock Text="Code" VerticalAlignment="Center"  FontWeight="Bold" Grid.Column="1" Foreground="{DynamicResource HighContrastUpBrush  }"></TextBlock>
                                <TextBlock Text="Name" VerticalAlignment="Center"  FontWeight="Bold" Grid.Column="2" Foreground="{DynamicResource HighContrastUpBrush  }"></TextBlock>
                                <TextBlock Text="From" VerticalAlignment="Center"  FontWeight="Bold" Grid.Column="3" Foreground="{DynamicResource HighContrastUpBrush  }"></TextBlock>
                                <TextBlock Text="To" VerticalAlignment="Center"  FontWeight="Bold" Grid.Column="4" Foreground="{DynamicResource HighContrastUpBrush  }"></TextBlock>
                            </Grid>
                        </Border>
                    <!--<ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >-->
                        <ListView Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{DynamicResource CustomContainerStyle}" x:Name="TimesList" Foreground="{DynamicResource FullContrastUpBrush }" BorderThickness="0" Background="Transparent" Grid.Column="0" ItemsSource="{Binding SelectedDay.TimeRanges}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border Margin="1" CornerRadius="5">
                                        <!--<Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background" Value="Transparent"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=LinkedTask,Converter={StaticResource ObjectToString}}" Value="NewTask">
                                                        <Setter Property="Background" Value="{DynamicResource DimmedActivityHighlightBrush  }" ></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>-->
                                        <Grid VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="35"></ColumnDefinition>
                                                <ColumnDefinition Width="120"></ColumnDefinition>
                                                <ColumnDefinition Width="500"></ColumnDefinition>
                                                <ColumnDefinition Width="150"></ColumnDefinition>
                                                <ColumnDefinition Width="150"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Image ToolTip="Saved in QI calendar" Grid.Column="0" Width="15" Height="20" Margin="10,3" Visibility="{Binding Path=SavedInQi, Converter={StaticResource BoolToVisibility}}" >
                                                <Image.Source>
                                                    <DrawingImage>
                                                        <DrawingImage.Drawing>
                                                            <GeometryDrawing Brush="{DynamicResource GreenButtonHighlightBrush}"
                                                                             Geometry="M19,19H5V8H19M19,3H18V1H16V3H8V1H6V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M16.53,11.06L15.47,10L10.59,14.88L8.47,12.76L7.41,13.82L10.59,17L16.53,11.06Z" />
                                                        </DrawingImage.Drawing>
                                                    </DrawingImage>
                                                </Image.Source>
                                            </Image>
                                            <Image ToolTip="Not yet saved in QI calendar" Grid.Column="0" Width="15" Height="20" Margin="10,3" Visibility="{Binding Path=SavedInQi, Converter={StaticResource InvertedBoolToVisibility}}" >
                                                <Image.Source>
                                                    <DrawingImage>
                                                        <DrawingImage.Drawing>
                                                            <GeometryDrawing Brush="#E5B025"
                                                                             Geometry="M18,11V12.5C21.19,12.5 23.09,16.05 21.33,18.71L20.24,17.62C21.06,15.96 19.85,14 18,14V15.5L15.75,13.25L18,11M18,22V20.5C14.81,20.5 12.91,16.95 14.67,14.29L15.76,15.38C14.94,17.04 16.15,19 18,19V17.5L20.25,19.75L18,22M19,3H18V1H16V3H8V1H6V3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H14C13.36,20.45 12.86,19.77 12.5,19H5V8H19V10.59C19.71,10.7 20.39,10.94 21,11.31V5A2,2 0 0,0 19,3Z" />
                                                        </DrawingImage.Drawing>
                                                    </DrawingImage>
                                                </Image.Source>
                                            </Image>
                                            <TextBlock VerticalAlignment="Center" Margin="5,0" Grid.Column="1" Text="{Binding LinkedTask.QiCode}" Visibility="{Binding Path=LinkedTask.QiCode, Converter={StaticResource QiCodeToVisibility}}"></TextBlock>
                                            <Image Margin="0,0,15,0" Grid.Column="1" Height="15">
                                                <Image.Source>
                                                    <DrawingImage>
                                                        <DrawingImage.Drawing>
                                                            <GeometryDrawing Brush="{DynamicResource RedButtonHighlightBrush}"
            Geometry="M17,7H13V8.9H17C18.71,8.9 20.1,10.29 20.1,12C20.1,13.43 19.12,14.63 17.79,15L19.25,16.44C20.88,15.61 22,13.95 22,12A5,5 0 0,0 17,7M16,11H13.81L15.81,13H16V11M2,4.27L5.11,7.38C3.29,8.12 2,9.91 2,12A5,5 0 0,0 7,17H11V15.1H7C5.29,15.1 3.9,13.71 3.9,12C3.9,10.41 5.11,9.1 6.66,8.93L8.73,11H8V13H10.73L13,15.27V17H14.73L18.74,21L20,19.74L3.27,3L2,4.27Z" />
                                                        </DrawingImage.Drawing>
                                                    </DrawingImage>
                                                </Image.Source>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=LinkedTask,Converter={StaticResource ObjectToString}}" Value="NewTask">
                                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock VerticalAlignment="Center" Margin="5,0" Grid.Column="2" Text="{Binding LinkedTask.Name}"></TextBlock>
                                            <TextBlock VerticalAlignment="Center" Margin="5,0" Grid.Column="3" Text="{Binding From}"></TextBlock>
                                            <TextBlock VerticalAlignment="Center" Margin="5,0" Grid.Column="4" Text="{Binding To}"></TextBlock>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    <!--</ScrollViewer>-->
                    </Grid>
                </Border>
                <GridSplitter HorizontalAlignment="Stretch" Width="3" Background="Transparent" Grid.Column="2" ResizeDirection="Columns"></GridSplitter>
                <Border Margin="0,5,5,5" Background="{DynamicResource BaseBrush}" HorizontalAlignment="Stretch" Grid.Column="3">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <TextBlock Foreground="{DynamicResource FullContrastUpBrush }" Grid.Row="0" Margin="5,0" Grid.Column="0" Text="{Binding ElementName=TimesList, Path=SelectedItem.LinkedTask.Name}"></TextBlock>
                            <TextBlock Foreground="{DynamicResource ActivityHighlightBrush }" Grid.Row="1" Margin="5,0" Grid.Column="0" Text="{Binding ElementName=TimesList, Path=SelectedItem.LinkedTask.QiCode}"></TextBlock>
                            <TextBlock Foreground="{DynamicResource FullContrastUpBrush }" Grid.Row="2" Margin="5,0" Grid.Column="0" Text="{Binding ElementName=TimesList, Path=SelectedItem.LinkedTask.Customer}"></TextBlock>
                            <TextBox Foreground="{DynamicResource FullContrastUpBrush }" Background="Transparent" BorderBrush="{DynamicResource ContrastUpBrush}" TextWrapping="Wrap" AcceptsReturn="True" MinHeight="50"  Grid.Row="3" Margin="5,0" Grid.Column="0" Text="{Binding ElementName=TimesList, Path=SelectedItem.Annotation, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <TextBlock Foreground="{DynamicResource FullContrastUpBrush }" Grid.Row="4" Margin="5,0" Grid.Column="0" Text="{Binding ElementName=TimesList, Path=SelectedItem.From}"></TextBlock>
                            <TextBlock Foreground="{DynamicResource FullContrastUpBrush }" Grid.Row="5" Margin="5,0" Grid.Column="0" Text="{Binding ElementName=TimesList, Path=SelectedItem.To}"></TextBlock>

                        </Grid>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
